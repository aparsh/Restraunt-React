{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponents.js","components/ContactComponent.js","components/DishdetailComponent.js","components/AboutComponent.js","components/HeaderComponents.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainConponents.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/ConfigureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errmsg","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","console","log","promotion","dish","dishesLoading","dishesErrmsg","promosLoading","promosErrmsg","leader","leadersLoading","leadersErrmsg","RenderMenuItem","onClick","to","id","width","Menu","menu","dishes","map","key","errMess","active","required","val","length","maxLength","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","href","role","model","onSubmit","value","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","selected","textarea","rows","color","type","Component","RenderDish","FormatDate","date","Intl","DateTimeFormat","month","day","year","format","Date","parse","RenderCommets","comments","commentsList","comment","author","DishDeatils","toggleCommentModalForm","setState","isCommentModalOpen","state","JSON","stringify","postComment","rating","CommentForm","isOpen","toggle","outline","RenderLeader","left","object","body","heading","About","leaders","leadersShow","title","list","Header","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","event","alert","username","password","remember","preventDefaut","Fragment","dark","expand","height","navbar","innerRef","input","Footer","dishesFailed","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchPromos","fetchDishes","fetchLeaders","fetchComments","location","classNames","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","dishId","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","err","Error","status","statusText","error","message","json","addComment","catch","feedback","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c0f83cc.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () =>{\n    return (\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x text-primary\"/>\n            <p>Loading . . .</p>\n        </div>\n    );\n}","export const baseUrl = 'https://my-json-server.typicode.com/aparsh/Restraunt-React';","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl } from '../shared/baseUrl';\nimport {FadeTransform} from 'react-animation-components';\n\nfunction RenderCard ({item, isLoading , errmsg}) {\n    if (isLoading) {\n        return(\n                <Loading />\n        );\n    }\n    else if (errmsg) {\n        return(\n                <h4>{errmsg}</h4>\n        );\n    }\n    else if (item){\n        return (\n            <FadeTransform in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name}/>\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n    }\n    else{\n        return(\n            <Loading />\n    );\n    }\n}\n\nfunction Home(props) {\n    console.log(props.promotion);\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard \n                    item={props.dish}\n                    isLoading={props.dishesLoading}\n                    errmsg={props.dishesErrmsg}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard \n                    item={props.promotion}\n                    isLoading={props.promosLoading}\n                    errmsg={props.promosErrmsg}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard \n                    item={props.leader}\n                    isLoading={props.leadersLoading}\n                    errmsg={props.leadersErrmsg}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl } from '../shared/baseUrl';\nimport {FadeTransform} from 'react-animation-components';\n\n    function RenderMenuItem({dish,onClick}) {\n        return (\n            <FadeTransform in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n                <Card >\n                    <Link to={`/menu/${dish.id}`}>\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                        <CardImgOverlay>\n                            <CardTitle>{dish.name}</CardTitle>\n                        </CardImgOverlay>\n                    </Link>\n                </Card>   \n            </FadeTransform>         \n        );\n    }\n\n    const Menu = (props) => {\n        const menu = props.dishes.dishes.map((dish)=>{\n            return (\n            <div key={dish.id} className=\"col-12  col-md-5 m-1\">\n                <RenderMenuItem dish={dish} />\n            </div>\n            );\n        });\n        \n        if (props.dishes.isLoading) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\">            \n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (props.dishes.errmsg) {\n            return(\n                <div className=\"container\">\n                    <div className=\"row\"> \n                        <div className=\"col-12\">\n                            <h4>{props.dishes.errMess}</h4>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return (\n                <div>\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Menu</h3>\n                            <hr />\n                        </div>                \n                    </div>\n                    <div className=\"row\">\n                        {menu}\n                    </div>\n                </div>\n            );\n        }  \n    }\n\nexport default Menu;","import React , { Component }from 'react';\nimport { Breadcrumb, BreadcrumbItem , Button, Label, Col, Row} from 'reactstrap';\nimport {Link } from 'react-router-dom';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\n\n\nconst required = (val)=> val && val.length;\nconst maxLength = (length) => (val) => !(val) || (val.length <= length);\nconst minLength = (length) => (val) => (val) && (val.length >= length);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        //console.log(\"the current state is: \"+ JSON.stringify(values));\n        //alert(values);\n        this.props.postFeedback(values);\n    }\n\n \n    render() {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>Contact Us</h3>\n                            <hr />\n                        </div>                \n                    </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                    <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                            <h5>Our Address</h5>\n                            <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                            </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-contact mt-1\">\n                    <div className=\"col-12\">\n                        <h3>Send us Your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model='feedback' onSubmit={(value) => this.handleSubmit(value)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                    placeholder=\"First Name\" className=\"form-control\"\n                                    validators={{\n                                        required, \n                                        minLength : minLength(3),\n                                        maxLength : maxLength(15)\n                                    }}/>\n                                    <Errors className=\"text-danger\"\n                                    model=\".firstname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required : 'Required',\n                                        minLength : 'First name must be greater than 2 characters.',\n                                        maxLength: 'First name must be small than 15 characters.' \n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                    placeholder=\"Last Name\" className=\"form-control\"\n                                    validators={{\n                                        required, \n                                        minLength : minLength(3),\n                                        maxLength : maxLength(15)\n                                    }}/>\n                                    <Errors className=\"text-danger\"\n                                    model=\".lastname\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required : 'Required',\n                                        minLength : 'Last name must be greater than 2 characters.',\n                                        maxLength: 'Last name must be small than 15 characters.' \n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Tel. Number</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                    placeholder=\"Tel. Number\" className=\"form-control\"\n                                    validators={{\n                                        required, \n                                        minLength : minLength(3),\n                                        maxLength : maxLength(15),\n                                        isNumber\n                                    }}/>\n                                    <Errors className=\"text-danger\"\n                                    model=\".telnum\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required : 'Required',\n                                        minLength : 'Last name must be greater than 2 characters.',\n                                        maxLength: 'Last name must be small than 15 characters.',\n                                        isNumber:'Shoud be a number' \n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                    placeholder=\"Email\" className=\"form-control\"\n                                    validators={{\n                                        required, \n                                        validEmail\n                                    }}/>\n                                    <Errors className=\"text-danger\"\n                                    model=\".email\"\n                                    show=\"touched\"\n                                    messages={{\n                                        required : 'Required',\n                                        validEmail:'Shoud be a valid Email' \n                                    }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:6, offset:2}}>\n                                    <div  className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                            className=\"form-check-input\"/>{' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label> \n                                    </div>\n                                </Col>\n                                <Col md={{size:3, offset:1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                    className=\"form-control\">\n                                        <option selected>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model =\".message\"id=\"message\" name=\"message\"\n                                    rows=\"12\" className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset:2}}>\n                                    <Button color=\"primary\" type=\"submit\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default Contact;","import React , {Component} from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, \n    BreadcrumbItem, Button, Modal, ModalBody, ModalHeader, Row, Col, Label} from 'reactstrap';\nimport{Link} from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport {Loading} from './LoadingComponent';\nimport {baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\n    function RenderDish({dish}) {\n        if(dish!=null){\n            return (\n                <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                    <Card >\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                        <CardBody>\n                            <CardTitle>{baseUrl + dish.name}</CardTitle>\n                            <CardText>{dish.description}</CardText>\n                        </CardBody>\n                    </Card>\n                </FadeTransform>\n            );\n        }\n        else{\n            return (\n                <div></div>\n            );\n        }\n    }\n    function FormatDate({date}){\n        var formattedDate = new Intl.DateTimeFormat('en-GB', { \n                            month: 'short', \n                            day: '2-digit',\n                            year: 'numeric', \n                            }).format(new Date(Date.parse(date)));\n        return formattedDate;\n    }\n\n\n    function RenderCommets({comments}) {\n        if(comments!=null){\n\n            var commentsList = comments.map((comment)=>{\n                return (\n                    <Fade in>\n                        <div className=\"offset-md-1\">\n                            <div className=\"row\">\n                                <p>{comment.comment}</p>\n                            </div>\n                            <div className=\"row\">\n                                <p>--{comment.author}, <FormatDate date={comment.date} />\n                                </p>\n                            </div>\n                        </div>\n                    </Fade>\n                );\n            });\n            return (\n                <div>\n                    <h4>Comments</h4>\n                    <Stagger in>\n                        {commentsList}\n                    </Stagger>\n                </div>\n            );\n        }\n        else{\n            return (\n                <div></div>\n            );\n        }\n    }\n\nconst required = (val)=> val && val.length;\nconst maxLength = (length) => (val) => !(val) || (val.length <= length);\nconst minLength = (length) => (val) => (val) && (val.length >= length);\n\nclass DishDeatils extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            isCommentModalOpen:false\n        };\n        this.toggleCommentModalForm = this.toggleCommentModalForm.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n      }\n\n    toggleCommentModalForm = ()=>{\n        this.setState({\n            isCommentModalOpen: !this.state.isCommentModalOpen\n          });\n    }\n    handleSubmit(values){\n        console.log(\"the current state is: \"+ JSON.stringify(values));\n        this.props.postComment(this.props.dish.id, values.rating, values.author, values.comment);\n    }\n    render(){\n        const CommentForm = () =>{\n            return (\n                <div>\n                <Modal id=\"SubmitComment\" isOpen={this.state.isCommentModalOpen}\n                            toggle={this.toggleCommentModalForm}>\n                    <ModalHeader toggle={this.toggleCommentModalForm}>Submit Comment</ModalHeader>\n                    <ModalBody className=\"ml-3 mr-3\">\n                        <LocalForm onSubmit={(value) => this.handleSubmit(value)}>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"rating\" >Rating</Label>\n                            <Control.select model=\".rating\" name=\"rating\"\n                                        className=\"form-control\">\n                                            <option selected>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                            </Control.select>                       \n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"author\">Your Name</Label>\n                            <Control.text model=\".author\" name=\"author\"\n                                        placeholder=\"Your Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength : minLength(3),\n                                            maxLength : maxLength(15)\n                                        }}/>\n                            <Errors className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required : 'Required ',\n                                            minLength : 'Name must be greater than 2 characters.',\n                                            maxLength: 'Name must be small than 15 characters.' \n                                        }}\n                            />\n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"comment\">Comment</Label>\n                            <Control.textarea model =\".comment\"id=\"comment\" name=\"comment\"\n                                        rows=\"8\" className=\"form-control\"\n                                        validators={{\n                                            required\n                                        }}/>\n                            <Errors className=\"text-danger\"\n                                        model=\".comment\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required : 'Required'\n                                        }}\n                            />\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Button color=\"primary\" type=\"submit\">\n                                    Comment\n                                </Button>\n                            </Row>                        \n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n                <Button outline color=\"secondary\" className=\"mt-auto\" \n                 onClick={this.toggleCommentModalForm}>\n                    <span className=\"fa fa-pencil fa-lg\"/>\n                    Submit Comment\n                </Button>\n                </div>\n            );\n    }\n\n        if(this.props.dishesLoading)\n        {\n            return (\n                <div className=\"continer\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if(this.props.dishesErrmsg)\n        {\n            return (\n                <div className=\"continer\">\n                    <div className=\"row\">\n                        <h4>{this.props.dishesErrmsg}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else if(this.props.dish!=null)\n        {\n            return (\n                <div>\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{this.props.dish.name}</h3>\n                            <hr />\n                        </div>                \n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <RenderDish dish={this.props.dish} />\n                        </div>\n                        <div className=\"col-12 col-md-5 m-1\">\n                            <RenderCommets comments={this.props.comments} />\n                            <CommentForm />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return (\n                <div></div>\n            );\n        }\n    }\n        \n}\n\nexport default DishDeatils;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {baseUrl} from '../shared/baseUrl';\nimport {Loading} from './LoadingComponent'; \nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({leader}) {\n    return (\n        <Fade in>\n            <Media className=\"mt-5\">\n                <Media left>\n                    <Media object src={baseUrl + leader.image} alt={leader.name}/>\n                </Media>\n                <Media body className=\"ml-5\">\n                    <Media heading>{leader.name}</Media>\n                    <h4>{leader.designation}</h4>\n                    <p>{leader.description}</p>\n                </Media>\n            </Media>\n        </Fade>\n    );\n}\nconst leaders = (leaders)=>{\n    if (leaders.isLoading) {\n        return(\n                <Loading />\n        );\n    }\n    else if (leaders.errmsg) {\n        return(\n                <h4>{leaders.errmsg}</h4>\n        );\n    }\n    else if (leaders.leaders){\n        var leaderlist = leaders.leaders.map((leader)=>{\n                return(\n                <RenderLeader leader={leader}/>\n                );\n            })\n\n        return leaderlist;    \n    }\n    else{\n        return(\n            <Loading />\n    );\n    }\n}\nfunction About(props) {\n    const leadersShow = leaders(props.leaders);\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <Stagger in>\n                        {leadersShow}\n                        </Stagger>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Nav,\nButton, Modal, ModalBody, ModalHeader, Form ,FormGroup, Input, Label} from 'reactstrap';\nimport {NavLink} from 'react-router-dom';\n\n\nclass Header extends Component {\n\n    constructor (props){\n        super(props);\n        this.state={\n            isNavOpen : false,\n            isModalOpen : false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"username: \"+ this.username.value + \"\\npassword: \"+ this.password.value + \n        \"\\nremember me: \" + this.remember.value);\n        event.preventDefaut();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav}/>\n                        <NavbarBrand href=\"/\" className=\"mr-auto\">\n                        <img src='assets/images/logo.png' height=\"30\" width=\"41\" \n                        alt='Ristorante Con Fusion' />\n                        </NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to=\"/home\">\n                                    <span className=\"fa fa-home fa-lg\"></span>HOME\n                                </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/about'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                            </NavItem>\n                        </Nav>\n                        <Nav className=\"ml-auto\" navbar>\n                            <Button outline onClick={this.toggleModal} color=\"warning\">\n                                <span className=\"fa fa-sign-in fa-lg\"></span>\n                                Login\n                            </Button>\n                        </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>     \n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                            <h1>Ristorante con Fusion</h1>\n                            <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>       \n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                        <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">\n                                Login\n                            </Button>                            \n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\nexport default Header;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Jumbotron } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props){\n    return (\n    <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/about'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                        121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">             \n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nimport {actions} from 'react-redux-form';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method:  'POST',\n        body: JSON.stringify(newComment),\n        headers:{\n            'Content-Type' : 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var err = new Error('Error ' + response.status + ' : ' + response.statusText);\n            err.response=response;\n            throw err;\n        }\n    }, error => {\n        var errormsg = new Error(error.message);\n        throw errormsg;\n    })\n    .then(response => response.json())\n    .then(comment => dispatch(addComment(comment)))\n    .catch(error => {\n        console.log('POST comment ', error.message);\n        alert('Yor comment couldnt be podted\\nError message: ' + error.message);\n    });\n    \n}\n\nexport const fetchDishes = ()=>(dispatch)=>{\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            console.log(response)\n            if(response.ok){\n                return response;\n            }\n            else{\n                var err = new Error('Error ' + response.status + ' : ' + response.statusText);\n                err.response=response;\n                throw err;\n            }\n        }, error => {\n            var errormsg = new Error(error.message);\n            throw errormsg;\n        })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = ()=>({\n    type : ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmsg) => ({\n    type : ActionTypes.DISHES_FAILED,\n    payload : errmsg\n});\n\nexport const addDishes = (dishes) => ({\n    type : ActionTypes.ADD_DISHES,\n    payload : dishes\n});\n\nexport const fetchComments = ()=>(dispatch)=>{\n\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if(response.ok){\n                return response;\n            }\n            else{\n                var err = new Error('Error ' + response.status + ' : ' + response.statusText);\n                err.response=response;\n                throw err;\n            }\n        }, error => {\n            var errormsg = new Error(error.message);\n            throw errormsg;\n        })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n}\nexport const commentsFailed = (errmsg) => ({\n    type : ActionTypes.COMMENTS_FAILED,\n    payload : errmsg\n});\nexport const addComments = (comments) => ({\n    type : ActionTypes.ADD_COMMENTS,\n    payload : comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading(true));\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var err = new Error('Error ' + response.status + ' : ' + response.statusText);\n            err.response=response;\n            throw err;\n        }\n    }, error => {\n        var errormsg = new Error(error.message);\n        throw errormsg;\n    })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmsg) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmsg\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n    \n    dispatch(leadersLoading(true));\n\n    return fetch(baseUrl + 'leaders')\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var err = new Error('Error ' + response.status + ' : ' + response.statusText);\n            err.response=response;\n            throw err;\n        }\n    }, error => {\n        var errormsg = new Error(error.message);\n        throw errormsg;\n    })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmsg) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmsg\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});\n\nexport const postFeedback = (feedback) => (dispatch) => {\n    return fetch(baseUrl + 'feedback', {\n        method:  'POST',\n        body: JSON.stringify(feedback),\n        headers:{\n            'Content-Type' : 'application/json'\n        },\n        credentials: 'same-origin'\n    })\n    .then(response => {\n        if(response.ok){\n            return response;\n        }\n        else{\n            var err = new Error('Error ' + response.status + ' : ' + response.statusText);\n            err.response=response;\n            throw err;\n        }\n    }, error => {\n        var errormsg = new Error(error.message);\n        throw errormsg;\n    })\n    .then(response => response.json())\n    .then(feedback => {\n        dispatch(actions.reset('feedback'));\n        alert(JSON.stringify(feedback));\n    })\n    .catch(error => {\n        console.log('POST comment ', error.message);\n        alert('Yor Feedback couldn\\'t be posted\\nError message: ' + error.message);\n    });\n}","export const ADD_COMMENT = 'ADD_COMMENT';\nexport const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const ADD_PROMOS = 'ADD_PROMOS';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const ADD_LEADERS = 'ADD_LEADERS';\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\nimport Home from './HomeComponent';\nimport Menu from './MenuComponents';\nimport Contact from './ContactComponent';\nimport DishDeatils from './DishdetailComponent';\nimport About from './AboutComponent';\nimport Header from './HeaderComponents';\nimport Footer from './FooterComponent'\nimport {Switch, Redirect, Route, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback} from '../redux/ActionCreators';\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\n\nconst  mapStateToProps = state =>{\n  return{\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  } \n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment:(dishId, rating, author, comment)=>dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback:(feedback)=>dispatch(postFeedback(feedback)),\n    fetchDishes: () => { dispatch(fetchDishes())},\n    fetchComments: () => { dispatch(fetchComments())},\n    fetchPromos: () => { dispatch(fetchPromos())},\n    fetchLeaders: () => { dispatch(fetchLeaders())}\n});\n\nclass Main extends Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchPromos();\n    this.props.fetchDishes();\n    this.props.fetchLeaders();\n    this.props.fetchComments();\n  }\n\n  render(){\n    const DishWithID = ({match})=>{\n      return (\n        <DishDeatils \n        dish={this.props.dishes.dishes.filter((dish)=>dish.id === parseInt(match.params.dishId,10))[0]}\n        dishesLoading={this.props.dishes.isLoading}\n        dishesErrmsg={this.props.dishes.errmsg} \n        comments={this.props.comments.comments.filter((comment)=>comment.dishId === parseInt(match.params.dishId,10))}\n        postComment = {this.props.postComment}\n        />\n      );\n    }\n\n\n    const HomePage = () => {\n        return (\n            <Home dish={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\n            dishesLoading={this.props.dishes.isLoading}\n            dishesErrmsg={this.props.dishes.errmsg}      \n            promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n            promosLoading={this.props.promotions.isLoading}\n            promosErrmsg={this.props.promotions.errmsg}\n            leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n            leadersLoading={this.props.leaders.isLoading}\n            leadersErrmsg={this.props.leaders.errmsg}\n            />\n        );\n    }\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          <TransitionGroup>\n            <CSSTransition key={this.props.location.key} classNames='page'>\n                <Switch>\n                    <Route path=\"/home\" component={HomePage}/>\n                    <Route exact path=\"/menu\" component={ ()=> <Menu dishes={this.props.dishes}/> }/>\n                    <Route exact path=\"/menu/:dishId\" component={DishWithID} />\n                    <Route exact path='/contactus' component={()=>\n                                    <Contact postFeedback={this.props.postFeedback}/>} \n                    />\n                    <Route path=\"/about\" component={()=> <About leaders={this.props.leaders}/>}/>\n                    <Redirect to=\"/home\"/>\n                </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\n","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\n    isLoading:true,\n    errmsg:null,\n    dishes:[]\n}, action)=>{\n    switch(action.type){\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading:false, errmsg: null, dishes: action.payload};\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading:true, errmsg: null, dishes: []};\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading:false, errmsg: action.payload, dishes: []};\n        default: return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n    errmsg:null,\n    comments:[]\n}, action)=>{\n    switch(action.type){\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errmsg: null, comments: action.payload};\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errmsg: action.payload};\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            console.log(\"Comment: \", comment);\n            return {...state, comments: state.comments.concat(comment)};\n        default: \n            return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\n    isLoading: false, \n    errmsg: null, \n    leaders: []\n}, action)=>{\n    switch(action.type){\n\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errmsg: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errmsg: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errmsg: action.payload, leaders: []};\n\n        default: return state;\n    }\n}","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\n    isLoading: false, \n    errmsg: null, \n    promotions: []\n}, action)=>{\n    switch(action.type){\n\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errmsg: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errmsg: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errmsg: action.payload, promotions: []};\n\n        default: return state;\n    }\n}","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React, { Component } from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport Main from './components/MainConponents';\nimport './App.css';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/ConfigureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n    };\n  }\n\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport {createForms} from 'react-redux-form';\nimport {Dishes} from './dishes';\nimport {Comments} from './comments';\nimport {Leaders} from './leaders';\nimport {Promotions} from './promotions';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { InitialFeedback } from './forms';\n\nexport const ConfigureStore = ()=>{\n    const store = createStore(\n        combineReducers({\n            dishes:Dishes,\n            promotions:Promotions,\n            leaders:Leaders,\n            comments:Comments,\n            ...createForms({\n                feedback: InitialFeedback\n            })           \n        }),\n        applyMiddleware(thunk, logger)\n    )\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}